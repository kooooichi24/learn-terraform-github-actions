# https://github.com/hashicorp/setup-terraform/tree/main
name: "Terraform Apply"

on:
  push:
    branches:
      - main
      - develop

env:
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_ACTIONS_WORKING_DIR: ${{ github.ref_name == 'main' && './prod' || './dev' }}
  DIFF_TARGET_DIR: ${{ github.base_ref == 'main' && 'prod' || 'dev' }}

jobs:
  check:
    name: Check changed files
    outputs:
      run: ${{ steps.diff.outputs.diff }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check if Terraform plan should be run based on PR diff
        id: diff
        run: |
          diff=$(git diff --name-only -r HEAD^1 HEAD | grep -q -E ^${{ env.DIFF_TARGET_DIR }}\|modules\/+ && echo 'true' || echo 'false')
          echo "diff=$diff" >> "$GITHUB_OUTPUT"
  terraform:
    name: "Terraform Apply"
    needs: check
    if: ${{ (needs.check.outputs.run == 'true') }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}    
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.6.4"
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -auto-approve
        continue-on-error: true

      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Apply ðŸš€\`${{ steps.apply.outcome }}\`
            <details><summary>Show Apply</summary>

            \`\`\`\n
            ${{ steps.apply.outputs.stdout }}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            const { data } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha
            });
            const pr_number = data?.[0]?.number;
            if (pr_number) {
              github.rest.issues.createComment({
                issue_number: pr_number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }